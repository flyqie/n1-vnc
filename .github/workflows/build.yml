name: Build Prebuilt

on: [push, pull_request]

jobs:
  Build-Linux:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: 'Install Build Deps'
        run: |
          sudo apt-get install -y build-essential make cmake git pkg-config liblzo2-dev libjpeg-turbo8-dev libpng-dev zlib1g-dev nasm libvncserver-dev

      - name: 'Build N1-VNC'
        run: |
          mkdir prebuilt
          go env
          go build -o prebuilt/n1-vnc .

      - name: 'Create INSTALL'
        run: |
          echo "Before using, please make sure libvncserver.so.1 exists in the system." > prebuilt/INSTALL
          echo "" >> prebuilt/INSTALL
          echo "You can use the following command to install it in Ubuntu/Debian (lower versions of the system need to compile manually):" >> prebuilt/INSTALL
          echo "apt-get install -y libvncserver1" >> prebuilt/INSTALL
          echo "" >> prebuilt/INSTALL
          echo "Have fun!" >> prebuilt/INSTALL

      - name: 'Upload artifact'
        uses: actions/upload-artifact@v4
        with:
          name: n1-vnc_prebuilt_linux_amd64
          path: prebuilt

  Build-Windows:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: 'Setup MSYS2'
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          cache: false
          install: >-
            git
            zip
            make
            mingw-w64-x86_64-go
            mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-cmake
            mingw-w64-x86_64-ninja
            mingw-w64-x86_64-gcc-libs
            mingw-w64-x86_64-libjpeg-turbo
            mingw-w64-x86_64-libpng
            mingw-w64-x86_64-lzo2
            mingw-w64-x86_64-zlib

      - name: 'Download libvncserver'
        run: |
          mkdir external
          cd external
          git clone https://github.com/LibVNC/libvncserver.git -b LibVNCServer-0.9.14

      - name: 'Build libvncserver'
        run: |
          cd external/libvncserver
          mkdir build
          cd build
          cmake -DBUILD_SHARED_LIBS=ON -DWITH_EXAMPLES=OFF -DWITH_OPENSSL=OFF  -DWITH_GNUTLS=OFF -DWITH_GCRYPT=OFF -DCMAKE_INSTALL_PREFIX=/mingw64/ ..
          cmake --build .
          cmake --install .

      - name: 'Build N1-VNC'
        run: |
          mkdir prebuilt
          go env
          go build -o prebuilt/n1-vnc.exe .

      - name: 'Copy RUNTIME'
        run: |
          cp /mingw64/bin/libgcc_s_seh-1.dll prebuilt/
          cp /mingw64/bin/libvncserver.dll prebuilt/
          cp /mingw64/bin/libwinpthread-1.dll prebuilt/
          cp /mingw64/bin/libjpeg-8.dll prebuilt/
          cp /mingw64/bin/liblzo2-2.dll prebuilt/
          cp /mingw64/bin/libpng16-16.dll prebuilt/
          cp /mingw64/bin/zlib1.dll prebuilt/

      - name: 'Upload artifact'
        uses: actions/upload-artifact@v4
        with:
          name: n1-vnc_prebuilt_win_amd64
          path: prebuilt
